{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","securityUtils/securityUtils.js","components/Layout/Header.js","components/Project/AddProject.js","actions/commonActions.js","components/Project/UpdateProject.js","components/tasks/Task.js","actions/backlogActions.js","components/Backlog.js","components/ProjectBoard.js","components/tasks/AddTask.js","components/tasks/UpdateTask.js","components/Layout/Landing.js","components/userManagment/Register.js","actions/securityActions.js","components/userManagment/Login.js","securityUtils/SecuredRoute.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_TASK","DELETE_TASK","SET_CURRENT_USER","getProject","id","history","dispatch","a","axios","get","res","type","payload","data","push","ProjectItem","onDeleteClick","props","deleteProject","project","this","className","projectKey","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","state","initialState","tasks","task","validToken","user","combineReducers","errors","action","console","log","filter","backlog","projectSequence","security","middleware","thunk","reactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","setJwt","token","defaults","headers","common","refreshTokenAndUser","jwtToken","localStorage","decodedToken","jwt_decode","logout","removeItem","Header","location","href","userIsAuthenticated","fullName","userIsNotAuthenticated","headerLinks","JSON","stringify","data-toggle","data-target","AddProject","startDate","endDate","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","createProject","match","params","classnames","placeholder","post","response","clearErrors","UpdateProject","projectToBeUpdated","updateProject","disabled","put","Task","deleteTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","propTpes","PropTypes","func","isRequired","Backlog","toDoComponents","status","inPropgressComponents","doneComponents","ProjectBoard","getBacklog","Object","keys","role","length","getBoardContent","protoTypes","object","AddTask","dueDate","taskInput","dueDateummary","addTask","UpdateTask","getTask","updateTask","Landing","loggedIn","loggedInOptions","loggedOutOptions","Register","email","password","password2","newUserInput","registerNewUser","message","style","color","username","confirmPassword","Login","loginRequest","login","result","setItem","component","otherProps","render","currentTime","Date","now","exp","replace","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14613aa7.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for Backlog Actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_TASK = \"GET_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\"\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project/\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type:GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    })\n};\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        })\n    } catch (error) {\n        history.push(\"/dashboard\");\n    }\n\n}\n\nexport const updateProject = (id, project, history) => async dispatch => {\n    try {\n        await axios.put(`/api/project/${id}`, project);\n        history.push(\"/dashboard\");\n    } catch (err) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const deleteProject =  projectKey => async dispatch => {\n    if (window.confirm(\"Are you sure to delete the WHOLE project with ALL of its data?\")) {\n        await axios.delete(`/api/project/${projectKey}`);\n        dispatch({\n            type:DELETE_PROJECT,\n            payload: projectKey\n        });\n    }\n}","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n    \n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    }\n    \n    render() {\n        const {project} = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectKey}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectKey}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectKey}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n                                \n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectKey)}>\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                </li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nProjectItem.propTypes={\n    deleteProject:PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteProject})(ProjectItem); \n","import React from 'react'\nimport {Link} from \"react-router-dom\"\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    )\n}\n\nexport default CreateProjectButton;\n","import React, { Component } from 'react'\nimport ProjectItem from './Project/ProjectItem';\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\"; \nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getProjects();\n    }\n    render() {\n        const {projects} = this.props.project;\n        return (\n            <div className=\"projects\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <h1 className=\"display-4 text-center\">Projects</h1>\n                                <br />\n                                <CreateProjectButton />\n                                <br />\n                                <hr />\n                                {projects.map(project=> (<ProjectItem key={project.id} project={project} /> ))}\n                               \n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            );\n        \n    }\n};\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project:state.project\n});\n\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import { GET_BACKLOG,  GET_TASK,  DELETE_TASK }  from \"../actions/types\";\n\nconst initialState = {\n    tasks: [],\n    task: {}\n}\n\nexport default function(state=initialState, action) {\n    switch(action.type) {\n        case GET_BACKLOG:\n            return{\n                ...state,\n                tasks: action.payload\n            }\n        case GET_TASK:\n            return{\n                ...state,\n                task: action.payload\n            }        \n        case DELETE_TASK:\n            return{\n                ...state,\n                tasks: state.tasks.filter(task => task.projectSequence !== action.payload)\n            }          \n        default:\n            return state;\n    }\n}","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state=initialState, action) {\n    console.log(action.payload);\n    switch(action.type) {\n        \n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: {}\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project.projectKey !== action.payload)\n            }\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n          return {\n            ...state,\n            validToken: action.payload ? true : false,\n            user: action.payload\n          };\n        default:\n          return state;\n      }\n}","import {combineReducers} from \"redux\";\nimport backlogReducer from \"./backlogReducer\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport securityReducer from \"./securityReducer\"\n\nexport default combineReducers({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer\n});","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {}\nconst middleware = [thunk]\n\nlet store;\n\nconst reactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && reactReduxDevTools ) {\n    // copied line from here https://github.com/zalmoxisus/redux-devtools-extension#usage\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware), reactReduxDevTools)\n        );\n} else {\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\n}\n\n\nexport default store;","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport store from '../store';\nimport { SET_CURRENT_USER } from \"../actions/types\";\n\nexport const setJwt = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n}\n\nexport const refreshTokenAndUser = () => {\n    const jwtToken = localStorage.jwtToken;\n    if (jwtToken) {\n        setJwt(jwtToken);\n        const decodedToken = jwt_decode(jwtToken);\n        store.dispatch({\n            type: SET_CURRENT_USER,\n            payload: decodedToken\n        });\n        console.log(\"returned\");\n        return decodedToken;\n    }\n}\n\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJwt(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../securityUtils/securityUtils\";\n\nclass Header extends Component {\n    logout(){\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n    render() {\n        const { user } = this.props.security;\n        \n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/dashboard\">\n                        Dashboard\n                    </Link>\n                </li>\n            </ul>\n\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/dashboard\">\n                        <i className=\"fas fa-user circle mr-1\">{user.fullName}</i>\n                    </Link>\n\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\n                        Logout\n                    </Link>\n                </li>\n            </ul>\n        </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/register\">\n                        Sign Up\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">\n                        Login\n                    </Link>\n                </li>\n            </ul>\n        </div>\n        );\n\n        let headerLinks = user && JSON.stringify(user) !== '{}' ? userIsAuthenticated : userIsNotAuthenticated;\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        logolo\n                    </Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {\n                        \n                        headerLinks\n                    }\n \n                </div>\n                \n            </nav>\n        )\n    }\n}\n\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n\n})\n\nexport default connect(mapStateToProps, {logout}) (Header);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../actions/projectActions\"\nimport classnames from \"classnames\"\n \nclass AddProject extends Component {\n    constructor() {\n        super()\n        this.state = {\n            projectName: \"\",\n            projectKey: \"\",\n            description: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    // lifecycle hooks\n    // TODO componentWillReceiveProps is depricated MUST refactor!!!\n    // https://medium.com/hackernoon/replacing-componentwillreceiveprops-with-getderivedstatefromprops-c3956f7ce607#:~:text=getDerivedStateFromProps%20is%20one%20of%20those,when%20it%20receives%20new%20props.\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value});\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            \"projectName\": this.state.projectName,\n            \"projectKey\": this.state.projectKey,\n            \"description\": this.state.description,\n            \"startDate\": this.state.startDate,\n            \"endDate\": this.state.endDate\n        };\n        this.props.createProject(newProject, this.props.history);\n    }\n    render() {\n        const {errors} = this.state;\n        console.log(this.props.match.params.projectKey);\n        return (\n            <div>\n            \n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input \n                                            name=\"projectName\" \n                                            value={this.state.projectName}\n                                            type=\"text\" \n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\":errors.projectName\n                                            })}\n                                            placeholder=\"Project Name\" \n                                            onChange={this.onChange}\n                                            />\n                                            {errors.projectName && (\n                                                <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                            )}\n                                            \n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input \n                                            name=\"projectKey\" \n                                            value={this.state.projectKey}\n                                            type=\"text\" \n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\":errors.projectKey\n                                            })}\n                                            placeholder=\"Unique Project Key\"\n                                            onChange={this.onChange}\n                                            />\n                                            {errors.projectName && (\n                                                <div className=\"invalid-feedback\">{errors.projectKey}</div>\n                                            )}\n                                    </div>\n                        \n                                    <div className=\"form-group\">\n                                        <textarea \n                                            name=\"description\" \n                                            value={this.state.description}\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\":errors.description\n                                            })}\n                                            placeholder=\"Project Description\"\n                                            onChange={this.onChange}></textarea>\n                                            {errors.projectName && (\n                                                <div className=\"invalid-feedback\">{errors.description}</div>\n                                            )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            name=\"startDate\"\n                                            value={this.state.startDate}\n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            onChange={this.onChange}\n                                             />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            name=\"endDate\"\n                                            value={this.state.endDate}\n                                            type=\"date\" \n                                            className=\"form-control form-control-lg\" \n                                            onChange={this.onChange}\n                                            />\n                                    </div>\n            \n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {createProject}) (AddProject);\n","import { GET_ERRORS } from \"./types\";\n\nexport const clearErrors = () => async dispatch => {\n    dispatch({\n        type:GET_ERRORS,\n        payload: {}\n    });\n}","import React, { Component } from \"react\";\nimport { getProject, updateProject } from \"../../actions/projectActions\";\nimport { clearErrors } from \"../../actions/commonActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n    constructor(){\n        super()\n        this.state = {\n            id:\"\",\n            projectName: \"\",\n            projectKey: \"\",\n            description: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillUnmount() {\n        console.log(\"Component will unmount\");\n        this.props.clearErrors();\n    }\n    \n    componentWillReceiveProps(nextProps){\n        console.log(\"componentWillReceiveProps\")\n        console.log(nextProps.errors)\n        console.log(nextProps.project)\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n            console.log(\"whut?\")\n            console.log(nextProps.errors)\n        }\n        const { id,\n            projectName,\n            projectKey,\n            description,\n            startDate,\n            endDate} = nextProps.project;\n        this.setState({ id,\n            projectName,\n            projectKey,\n            description,\n            startDate,\n            endDate});\n    }\n\n    componentDidMount() {\n        console.log(\"componentDidMount\")\n        const {id} = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const projectToBeUpdated = {\n            projectName: this.state.projectName,\n            description: this.state.description,\n            startDate: this.state.startDate,\n            endDate: this.state.endDate\n        }\n        this.props.updateProject(this.state.id, projectToBeUpdated, this.props.history);\n    }\n\n    render() {\n        const {errors} = this.state\n        return (\n            <div className=\"project\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h5 className=\"display-4 text-center\">Create / Edit Project form</h5>\n                        <hr />\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.projectName})} \n                                    placeholder=\"Project Name\" \n                                    name=\"projectName\"\n                                    value={this.state.projectName}\n                                    onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                            </div>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Unique Project ID\"\n                                    name=\"projectKey\"\n                                    disabled \n                                    value={this.state.projectKey}\n                                    />\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea \n                                className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.description})} \n                                    placeholder=\"Project Description\"\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    onChange={this.onChange}\n                                    >\n                                </textarea>\n                                {errors.description && (\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\n                                )}\n                            </div>\n                            <h6>Start Date</h6>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"startDate\" \n                                    value={this.state.startDate}\n                                    onChange={this.onChange}\n                                    />\n                            </div>\n                            <h6>Estimated End Date</h6>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"endDate\" \n                                    value={this.state.endDate}\n                                    onChange={this.onChange}\n                                    />\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n};\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    updateProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n\n};\n\n\nconst mapStateToProps = state => ({\n    project:state.project.project,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getProject, updateProject, clearErrors })(UpdateProject);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { deleteTask } from '../../actions/backlogActions';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Task extends Component {\n    onDeleteClick(projectKey, projectSequence) {\n        this.props.deleteTask(projectKey, projectSequence);\n    }\n    render() {\n        const task = this.props.task;\n        let priorityString;\n        let priorityClass;\n        \n        if(task.priority===1) {\n            priorityClass = \"bg-danger text-light\";\n            priorityString = \"High\";\n        } else if (task.priority===2) {\n            priorityClass = \"bg-warning text-light\";\n            priorityString = \"Medium\";\n        } else if (task.priority===3) {\n            priorityClass = \"bg-info text-light\";\n            priorityString = \"Low\";  \n        }\n        return (\n            <div className=\"card mb-1 bg-light\">\n                <div className={`card-header text-primary ${priorityClass}`}>\n                    key: {task.projectSequence} -- Priority: {priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {task.acceptanceCriteria}\n                    </p>\n                    \n                    <Link to={`/updateTask/${task.projectKey}/${task.projectSequence}`} className=\"btn btn-primary\">\n                        View / Update\n                    </Link>\n                    \n                    <button \n                        onClick={this.onDeleteClick.bind(this, task.projectKey, task.projectSequence)} \n                        className=\"btn btn-danger ml-4\">\n                        Delete\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nTask.propTpes = {\n    deleteTask: PropTypes.func.isRequired\n}\n\nexport default connect (null, {deleteTask} )(Task);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_BACKLOG, GET_TASK, DELETE_TASK } from \"./types\";\n\nexport const addTask = (taskInput, history) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/`, taskInput);\n        history.push(`/projectBoard/${taskInput.projectKey}`);\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: error.response.data\n        });\n    }\n};\n\nexport const getBacklog = projectKey => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${projectKey}`);\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        });\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: error.response.data\n        });\n    }\n} \n\nexport const getTask = (projectKey, projectSequence, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${projectKey}/${projectSequence}`);\n        dispatch({\n            type: GET_TASK,\n            payload: res.data\n        });\n    } catch (error) {\n        history.push(\"/dashboard\");\n    }\n}\n\nexport const updateTask = (projectKey, projectSequence, taskInput, history) => async dispatch => {\n    try {\n        await axios.put(`/api/backlog/${projectKey}/${projectSequence}`, taskInput);\n        history.push(`/projectBoard/${projectKey}`);\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: error.response.data\n        });\n    }\n}\n\nexport const deleteTask = (projectKey, projectSequence) => async dispatch => {\n    if (window.confirm(`You are deleting ${projectSequence} task. Are you sure?`)) {\n        await axios.delete(`/api/backlog/${projectKey}/${projectSequence}`);\n        dispatch({\n            type: DELETE_TASK,\n            payload: projectSequence\n        })\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport Task from './tasks/Task';\n\nclass Backlog extends Component {\n    render() {\n        const { tasks } = this.props;\n\n        let toDoComponents = tasks.filter(task => task.status === \"TO_DO\").map(task => (<Task task={task}/>));\n        let inPropgressComponents = tasks.filter(task => task.status === \"IN_PROGRESS\").map(task => (<Task task={task}/>));\n        let doneComponents = tasks.filter(task => task.status === \"DONE\").map(task => (<Task task={task}/>));\n\n\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n\n                    <div className=\"card text-center mb-2\">\n                        <div className=\"card-header text-white bg-secondary\">\n                            <h3>TO DO</h3>\n                        </div>\n                    </div>\n                    {toDoComponents}\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                        <div className=\"card-header bg-primary text-white\">\n                            <h3>In Progress</h3>\n                        </div>\n                    </div>\n                    {inPropgressComponents}\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                        <div className=\"card-header bg-success text-white\">\n                            <h3>Done</h3>\n                        </div>\n                    </div>\n                    {doneComponents}\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Backlog;\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport Backlog from './Backlog';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../actions/backlogActions\"; \nimport { clearErrors } from '../actions/commonActions';\n\nclass ProjectBoard extends Component {\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors})\n        }\n    }\n\n    componentDidMount() {\n        const { projectKey } = this.props.match.params;\n        this.props.getBacklog(projectKey);\n    }\n\n    componentWillUnmount() {\n        console.log(\"Component will unmount\");\n        this.props.clearErrors();\n    }\n\n    getBoardContent() {\n        const tasks = this.props.backlog.tasks;\n        const errors = this.state.errors;\n        \n        if (errors[Object.keys(errors)[0]]) {\n            return (\n                <div className=\"alert alert-danger text-center\" role=\"alert\">{errors[Object.keys(errors)[0]]}</div>\n            )\n        } else if (tasks.length < 1) {\n            return <div className=\"alert alert-info text-center\" role=\"alert\">No tasks on this board (in this project)</div>\n        } else {\n            return <Backlog tasks={tasks}/>\n        }\n    }\n\n    render() {\n        const projectKey = this.props.match.params.projectKey;\n        return (\n            <div className=\"container\">\n            <Link to={`/addTask/${projectKey}`} className=\"btn btn-primary mb-3\">\n                <i className=\"fas fa-plus-circle\"> Create Task</i>\n            </Link>\n            <br />\n            <hr />\n            {this.getBoardContent()}\n        </div>\n        );\n    }\n}\n\nProjectBoard.protoTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getBacklog, clearErrors})(ProjectBoard);\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { addTask } from \"../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddTask extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            errors: {}\n            \n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n    // lifecycle hooks\n    // TODO componentWillReceiveProps is depricated MUST refactor!!!\n    // https://medium.com/hackernoon/replacing-componentwillreceiveprops-with-getderivedstatefromprops-c3956f7ce607#:~:text=getDerivedStateFromProps%20is%20one%20of%20those,when%20it%20receives%20new%20props.\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value});\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const taskInput = {\n            \"projectKey\": this.props.match.params.projectKey,\n            \"summary\": this.state.summary,\n            \"acceptanceCriteria\":this.state.acceptanceCriteria,\n            \"status\": this.state.status,\n            \"priority\": this.state.priority,\n            \"dueDate\": this.state.dueDateummary,\n        };\n        this.props.addTask(taskInput, this.props.history);\n    }\n    render() {\n        const projectKey = this.props.match.params;\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to={`/projectBoard/${projectKey}`} className=\"btn btn-light\">\n                            Back to Project Board\n                        </Link>\n                        <h4 className=\"display-4 text-center\">Add Task</h4>\n                        <p className=\"lead text-center\">Project Name + Project Code</p>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\":errors.summary})} \n                                    name=\"summary\" \n                                    placeholder=\"Project Task summary\" \n                                    value={this.state.summary}\n                                    onChange={this.onChange}\n                                />\n                                {\n                                    errors.summary && (<div className=\"invalid-feedback\">{errors.summary}</div>)\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Acceptance Criteria\" \n                                    name=\"acceptanceCriteria\"\n                                    value={this.state.acceptanceCriteria}\n                                    onChange={this.onChange}\n                                >\n                                </textarea>\n                            </div>\n                            <h6>Due Date</h6>\n                            <div className=\"form-group\">\n                                <input \n                                    type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"dueDate\" \n                                    value={this.state.dueDate}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <select \n                                    className=\"form-control form-control-lg\" \n                                    name=\"priority\"\n                                    value={this.state.priority}\n                                    onChange={this.onChange}\n                                >\n                                    <option value={0}>Select Priority</option>\n                                    <option value={1}>High</option>\n                                    <option value={2}>Medium</option>\n                                    <option value={3}>Low</option>\n                                </select>\n                            </div>\n    \n                            <div className=\"form-group\">\n                                <select \n                                    className=\"form-control form-control-lg\" \n                                    name=\"status\"\n                                    value={this.state.status}\n                                    onChange={this.onChange}\n                                >\n                                    <option value=\"\">Select Status</option>\n                                    <option value=\"TO_DO\">TO DO</option>\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                    <option value=\"DONE\">DONE</option>\n                                </select>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nAddTask.propTypes = {\n    addTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { addTask })(AddTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { getTask, updateTask } from \"../../actions/backlogActions\";\nimport { getProject } from '../../actions/projectActions';\nimport { clearErrors } from '../../actions/commonActions';\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdateTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectKey: \"\",\n      errors: {},\n      project: {\n        projectName: \"\"\n     }\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { projectKey, projectSequence } = this.props.match.params;\n    this.props.getTask(projectKey, projectSequence, this.props.history);\n    this.props.getProject(projectKey, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({errors: nextProps.errors});\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectKey\n    } = nextProps.task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectKey,\n      project: nextProps.project\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n      e.preventDefault();\n      const taskInput = {\n        summary: this.state.summary,\n        acceptanceCriteria: this.state.acceptanceCriteria,\n        status: this.state.status,\n        priority: this.state.priority,\n        dueDate: this.state.dueDate,\n        projectKey: this.state.project.projectKey\n      }\n      this.props.updateTask(\n        this.state.projectKey, \n        this.state.projectSequence, \n        taskInput, \n        this.props.history);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Component will unmount\");\n    this.props.clearErrors();\n}\n\n  render() {\n    const errors = this.state.errors;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${this.state.projectKey}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.project.projectName} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.summary})}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {\n                    errors.summary && (\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\n                    )\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateTask.propTypes = {\n    getTask: PropTypes.func.isRequired,\n    updateTask: PropTypes.func.isRequired,\n    task: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    task: state.backlog.task,\n    project: state.project.project,\n    errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTask, getProject, updateTask, clearErrors }\n)(UpdateTask);","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n    \n    render() {\n        const user = this.props.security.user;\n        const loggedIn = user && JSON.stringify(user) !== '{}';\n        const loggedInOptions = (\n            <div>\n                <Link to=\"/logout\" className=\"btn btn-lg btn-secondary mr-2\">\n                    Logout\n                </Link>\n            </div>\n        );\n        const loggedOutOptions = (\n            <div>\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                    Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                    Login\n                </Link>\n            </div>\n        );\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Logolo, task tracking with workhour loging</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start you own\n                                </p>\n                                <hr />\n                                {loggedIn ? loggedInOptions : loggedOutOptions}\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps) (Landing); \n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { registerNewUser } from \"../../actions/securityActions\";\nimport { clearErrors } from \"../../actions/commonActions\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {}\n\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/\")\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUserInput = {\n            \"fullName\": this.state.name,\n            \"username\": this.state.email,\n            \"password\": this.state.password,\n            \"confirmPassword\": this.state.password2\n\n        }\n        this.props.registerNewUser(newUserInput, this.props.history);\n\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({errors: nextProps.errors});\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            \n            <div className=\"register\">\n                <div className=\"container\">\n                <div className=\"invalid-feedback\">\n               \n                </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <div className=\"invalid-feedback\">\n                            </div>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            {errors.message && (\n                                <h6 className=\"display-10 text-center red\" style={{color: \"red\"}}>{errors.message}</h6>\n                            )}\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\",\n                                        {\"is-invalid\":errors.fullName})}\n                                        placeholder=\"Full Name\" \n                                        name=\"name\"\n                                        value={this.state.name}\n                                        onChange={this.onChange}\n                                 \n                                    />\n                                    <div className=\"invalid-feedback\">{errors.message}</div>\n                                    {errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\",\n                                        {\"is-invalid\":errors.username})}\n                                        placeholder=\"Email Address\" \n                                        name=\"email\" \n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n        \n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\",\n                                        {\"is-invalid\":errors.password})}\n                                        placeholder=\"Password\" \n                                        name=\"password\" \n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\",\n                                        {\"is-invalid\":errors.confirmPassword})}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"password2\" \n                                        value={this.state.password2}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerNewUser: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n\n};\n\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\n\nexport default connect(mapStateToProps, { registerNewUser, clearErrors })(Register);\n","import axios from \"axios\";\nimport { setJwt, refreshTokenAndUser } from \"../securityUtils/securityUtils\";\nimport { GET_ERRORS } from \"./types\";\n\nexport const registerNewUser = (newUserInput, history) => async dispatch => {\n    try {\n        await axios.post('/api/users/register/', newUserInput);\n        history.push('/login');\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: error.response.data\n        });\n    }\n};\n\nexport const login = (loginRequest, history) => async dispatch => {\n    try {\n        const result = await axios.post(\"/api/users/login\", loginRequest);\n        const token = result.data.token;\n        localStorage.setItem(\"jwtToken\", token);\n        refreshTokenAndUser();\n    } catch (error) {\n        dispatch({\n            type:GET_ERRORS,\n            payload: error.response.data\n        });   \n    }\n};\n\n","import React, { Component } from 'react'; \nimport {connect} from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    componentWillReceiveProps(nextProps){\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n        this.setState({errors: nextProps.errors});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const loginRequest = {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }\n        this.props.login(loginRequest, this.props.history);\n\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"email\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\" : errors.username\n                                        })} \n                                        placeholder=\"username (email)\" \n                                        name=\"username\" \n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.username && (\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\" : errors.password\n                                        })} \n                                        placeholder=\"password\" \n                                        name=\"password\" \n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )\n                                    }\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            )\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nconst SecuredRoute = ( {component: Component, security, ...otherProps}) => (\n    <Route \n        {...otherProps} render = {\n            props => security.validToken ? \n            (<Component {...props}/>) :\n            (<Redirect to=\"login\"/>)\n            \n        } \n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    security: state.security\n})\n\nexport default connect (mapStateToProps)(SecuredRoute);","//import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from './components/Project/UpdateProject';\nimport {Provider} from \"react-redux\";\nimport store from './store';\nimport ProjectBoard from './components/ProjectBoard';\nimport AddTask from './components/tasks/AddTask';\nimport UpdateTask from './components/tasks/UpdateTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/userManagment/Register';\nimport Login from './components/userManagment/Login';\nimport { setJwt, logout, refreshTokenAndUser } from \"./securityUtils/securityUtils\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport SecuredRoute from './securityUtils/SecuredRoute';\n\nconst jwtToken = localStorage.jwtToken;\nif (jwtToken) {\n  setJwt(jwtToken);\n  const decodedToken = jwt_decode(jwtToken);\n  store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: decodedToken\n  });\n\n  const currentTime = Date.now()/1000;\n  if (decodedToken.exp < currentTime) {\n    console.log(\"token expired\");  \n    store.dispatch(logout());\n    window.location.replace(\"/\");\n  }\n}\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n\n          {\n            //Private Routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n         \n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:projectKey\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/addTask/:projectKey\" component={AddTask} />\n            <SecuredRoute exact path=\"/updateTask/:projectKey/:projectSequence\" component={UpdateTask} />\n          </Switch>\n\n        </div>\n      </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}